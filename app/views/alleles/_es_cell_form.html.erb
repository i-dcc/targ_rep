<% pipeline_list = Pipeline.find(:all, :order => "name").collect {|p| [ p.name, p.id ] } %>

<tr class="es_cell">
  <td>
    <%= f.hidden_field :nested %>
    <%= f.select :pipeline_id, pipeline_list.unshift(['',nil]) %>
  </td>
  <td><%= f.text_field :name %></td>
  <td>
    <%= f.text_field :targeting_vector_name %>
    <div id="autocomplete_for_" class="autocomplete"></div>
    <script type="text/javascript">
      var input_field_id = $('autocomplete_for_').previous('input').readAttribute('id');
      $('autocomplete_for_').writeAttribute('id', 'autocomplete_for_' + input_field_id);
      
      new Ajax.Autocompleter(
        input_field_id,
        'autocomplete_for_' + input_field_id,
        '/targeting_vectors.js',
        {
          method: 'GET',
          min_chars: 2,
          paramName: 'name_like',
          parameters: 'allele_id=<%= @allele.id %>'
        }
      );
    </script>
  </td>
  <td><%= f.text_field :mgi_allele_id %></td>
  <td><%= f.text_field :allele_symbol_superscript %></td>
  <td><%= f.text_field :parental_cell_line %></td>
  <td><%= f.text_field :ikmc_project_id %></td>
  <td><%= f.check_box :report_to_public %></td>
  <td><a href="#" class="es_cell_qc_toggle ss_sprite ss_magnifier">show/hide QC metrics</a></td>
  <td><%= remove_es_cell_link(f) %></td>
</tr>
<tr class="es_cell_qc" style="display:none;">
  <td colspan="10">
    <%= render :partial => 'es_cell_qc_form', :locals => { :f => f } %>
  </td>
</tr>